{
  "_args": [
    [
      {
        "raw": "express-fileuploader-s3",
        "scope": null,
        "escapedName": "express-fileuploader-s3",
        "name": "express-fileuploader-s3",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/aniketverma/WebstormProjects/pinglearnbackend"
    ]
  ],
  "_from": "express-fileuploader-s3@latest",
  "_id": "express-fileuploader-s3@0.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/express-fileuploader-s3",
  "_npmUser": {
    "name": "heroicyang",
    "email": "me@heroicyang.com"
  },
  "_npmVersion": "1.3.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-fileuploader-s3",
    "scope": null,
    "escapedName": "express-fileuploader-s3",
    "name": "express-fileuploader-s3",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/express-fileuploader-s3/-/express-fileuploader-s3-0.0.1.tgz",
  "_shasum": "41c272d4a96e1a3edf5a5328fa0e601798d6d81d",
  "_shrinkwrap": null,
  "_spec": "express-fileuploader-s3",
  "_where": "/Users/aniketverma/WebstormProjects/pinglearnbackend",
  "author": {
    "name": "Heroic Yang",
    "email": "me@heroicyang.com",
    "url": "http://heroicyang.com/"
  },
  "bugs": {
    "url": "https://github.com/heroicyang/express-fileuploader-s3/issues"
  },
  "config": {
    "blanket": {
      "pattern": [
        "express-fileuploader-s3/lib"
      ]
    },
    "travis-cov": {
      "threshold": 80
    }
  },
  "dependencies": {
    "express-fileuploader": "~0.0.2",
    "knox": "~0.8.8"
  },
  "description": "S3Strategy for express-fileuploader, use this strategy to upload files to Amazon S3.",
  "devDependencies": {
    "blanket": "~1.1.6",
    "connect-multiparty": "~1.0.1",
    "coveralls": "~2.6.1",
    "express": "~3.4.4",
    "mocha": "~1.16.2",
    "mocha-lcov-reporter": "~0.0.1",
    "should": "2.0.2",
    "supertest": "~0.8.2",
    "travis-cov": "~0.2.4"
  },
  "directories": {},
  "dist": {
    "shasum": "41c272d4a96e1a3edf5a5328fa0e601798d6d81d",
    "tarball": "https://registry.npmjs.org/express-fileuploader-s3/-/express-fileuploader-s3-0.0.1.tgz"
  },
  "homepage": "https://github.com/heroicyang/express-fileuploader-s3",
  "keywords": [
    "upload",
    "uploader",
    "express",
    "express-upload",
    "express-uploader",
    "express-fileuploader",
    "s3"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "heroicyang",
      "email": "me@heroicyang.com"
    }
  ],
  "name": "express-fileuploader-s3",
  "optionalDependencies": {},
  "readme": "express-fileuploader-s3\n===================\n\n[![Dependency Status](https://gemnasium.com/heroicyang/express-fileuploader-s3.png)](https://gemnasium.com/heroicyang/express-fileuploader-s3)\n\n`S3Strategy` for [express-fileuploader](https://github.com/heroicyang/express-fileuploader), use this strategy to upload files to [Amazon S3](http://aws.amazon.com/s3/).\n\n## Install\n\n```bash\nnpm install express-fileuploader-s3 --save\n```\n\n## Usage\n\n```javascript\nvar http = require('http');\nvar express = require('express');\nvar mutilpart = require('connect-multiparty');\nvar uploader = require('express-fileuploader');\nvar S3Strategy = require('express-fileuploader-s3');\n\nvar app = express();\napp.use('/upload/image', mutilpart());\n\nuploader.use(new uploader.S3Strategy({\n  uploadPath: '/uploads',\n  headers: {\n    'x-amz-acl': 'public-read'\n  },\n  options: {\n    key: 'your api key',\n    secret: 'your api secret',\n    bucket: 'your bucket name'\n  }\n}));\n\napp.post('/upload/image', function(req, res, next) {\n  uploader.upload('s3', req.files['images'], function(err, files) {\n    if (err) {\n      return next(err);\n    }\n    res.send(JSON.stringify(files));\n  });\n});\n\nhttp.createServer(app).listen(8000);\n```\n\n## Options\n\n- **uploadPath**    file destination path\n- **headers**       http headers. (Optional)\n  For more information, [see here](https://github.com/LearnBoost/knox#put)\n- **options**       s3 client options\n  - **key**         api key\n  - **secret**      secret\n  - **bucket**      bucket name\n  - **domain**      your own domain map to the bucket. (Optional)\n\n## Running Tests\n\nTo run the test suite you must first have an S3 account, and modify the `test/config.json`.\n\nThen execute the test suite:\n\n```bash\nmake test\n```\n\n##License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Heroic Yang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/heroicyang/express-fileuploader-s3.git"
  },
  "scripts": {
    "test": "make test-all"
  },
  "version": "0.0.1"
}
